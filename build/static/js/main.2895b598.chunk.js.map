{"version":3,"sources":["images/memories.png","styles.js","constants/actionTypes.js","api/index.js","actions/posts.js","components/Form/styles.js","components/Form/Form.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","components/Posts/styles.js","components/Posts/Posts.js","App.js","reducers/index.js","reducers/posts.js","index.js"],"names":["makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","heading","color","image","marginLeft","breakpoints","down","mainContainer","CREATE","UPDATE","DELETE","FETCH_ALL","url","updatePost","id","updatedPost","axios","patch","deletePost","delete","likePost","createPost","post","dispatch","a","newPost","data","type","payload","console","log","api","root","spacing","paper","padding","form","flexWrap","fileInput","width","buttonSubmit","marginBottom","Form","currentId","setCurrentId","useState","creator","title","message","tags","selectedFile","postData","setPostData","useSelector","state","posts","find","p","_id","classes","useStyles","useDispatch","useEffect","handleSubmit","e","preventDefault","clear","Paper","className","autoComplete","noValidate","onSubmit","Typography","variant","TextField","name","label","fullWidth","value","onChange","target","split","multiple","onDone","base64","Button","size","onClick","media","height","paddingTop","backgroundColor","backgroundBlendMode","border","fullHeightCard","card","position","overlay","top","left","overlay2","right","grid","details","cardActions","Post","Card","CardMedia","moment","createdAt","fromNow","style","fontSize","map","tag","gutterBottom","CardContent","component","CardActions","likeCount","smMargin","actionDiv","textAlign","Posts","length","Grid","container","item","xs","sm","CircularProgress","App","get","Container","maxidth","AppBar","align","src","memories","alt","Grow","in","justify","combineReducers","action","filter","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2895b598.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/memories.9cfa8a46.png\";","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n    appBar: {\r\n        borderRadius: 15,\r\n        margin: '30px 0',\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    heading: {\r\n        color: 'rgba(0,183,255, 1)',\r\n    },\r\n    image: {\r\n        marginLeft: '15px',\r\n    },\r\n    [theme.breakpoints.down('sm')]: {\r\n        mainContainer: {\r\n            flexDirection: \"column-reverse\"\r\n        }\r\n    }\r\n\r\n}))","export const CREATE = 'CREATE';\r\nexport const UPDATE = 'UPDATE';\r\nexport const DELETE = 'DELETE';\r\nexport const FETCH_ALL = 'FETCH_ALL';\r\n","import axios from 'axios';\r\n\r\nconst url = 'https://my-project-04.herokuapp.com/posts';\r\n\r\nexport const fetchPosts = () => axios.get(url)\r\n\r\nexport const createPost = (newPost) => axios.post(url, newPost);\r\n\r\nexport const updatePost = (id, updatedPost) => axios.patch(`${url}/${id}`, updatedPost);\r\n\r\nexport const deletePost = (id) => axios.delete(url + '/' + id);\r\n\r\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`)","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\r\nimport * as api from '../api';\r\n\r\n// Action Creators\r\n\r\nexport const getPosts = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchPosts();\r\n\r\n        dispatch({\r\n            type: FETCH_ALL,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const createPost = (post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createPost(post);\r\n        dispatch({ type: CREATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.updatePost(id, post)\r\n        dispatch({ type: UPDATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n    try {\r\n        await api.deletePost(id);\r\n\r\n        dispatch({ type: DELETE, payload: id })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.likePost(id)\r\n        dispatch({ type: UPDATE, payload: data })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n  },\r\n  fileInput: {\r\n    width: '97%',\r\n    margin: '10px 0',\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));","import React, { useState, useEffect } from 'react'\r\nimport useStyles from './styles';\r\nimport FileBase from 'react-file-base64';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createPost, updatePost } from '../../actions/posts'\r\nimport { TextField, Button, Typography, Paper } from '@material-ui/core';\r\n\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n    const [postData, setPostData] = useState({ creator: '', title: '', message: '', tags: '', selectedFile: '' })\r\n    const post = useSelector((state) => (currentId ? state.posts.find((p) => p._id === currentId) : null));\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (post) {\r\n            setPostData(post)\r\n        }\r\n    }, [post])\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n    \r\n        if (currentId === 0) {\r\n          dispatch(createPost(postData));\r\n          clear();\r\n        } else {\r\n          dispatch(updatePost(currentId, postData));\r\n          clear();\r\n        }\r\n      };\r\n\r\n    const clear = () => {\r\n        setCurrentId(0);\r\n        setPostData({ creator: '', title: '', message: '', tags: '', selectedFile: '' })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Paper className={classes.paper}>\r\n            <form autoComplete=\"off\" noValidate className={`${classes.root} ${classes.form}`} onSubmit={handleSubmit}>\r\n                <Typography variant=\"h6\">{currentId ? 'Editing' : 'Creating'} </Typography>\r\n                <TextField\r\n                    name=\"creator\"\r\n                    variant=\"outlined\"\r\n                    label=\"Creator\"\r\n                    fullWidth\r\n                    value={postData.creator}\r\n                    onChange={(e) => setPostData({ ...postData, creator: e.target.value })}\r\n                />\r\n                <TextField\r\n                    name=\"title\"\r\n                    variant=\"outlined\"\r\n                    label=\"Title\"\r\n                    fullWidth\r\n                    value={postData.title}\r\n                    onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n                />\r\n                <TextField\r\n                    name=\"message\"\r\n                    variant=\"outlined\"\r\n                    label=\"Message\"\r\n                    fullWidth\r\n                    value={postData.message}\r\n                    onChange={(e) => setPostData({ ...postData, message: e.target.value })}\r\n                />\r\n                <TextField\r\n                    name=\"tags\"\r\n                    variant=\"outlined\"\r\n                    label=\"Tags\"\r\n                    fullWidth\r\n                    value={postData.tags}\r\n                    onChange={(e) => setPostData({ ...postData, tags: e.target.value.split(',') })}\r\n                />\r\n                <div className={classes.fileInput}>\r\n                    <FileBase\r\n                        type=\"file\"\r\n                        multiple={false}\r\n                        onDone={({ base64 }) => setPostData({ ...postData, selectedFile: base64 })} />\r\n                </div>\r\n                <Button className={classes.buttonSubmit} variant=\"contained\" color=\"primary\" size=\"large\" type=\"submit\" fullWidth>Submit</Button>\r\n                <Button variant=\"contained\" color=\"secondary\" size=\"small\" onClick={clear} fullWidth>Clear</Button>\r\n            </form>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    backgroundBlendMode: 'darken',\r\n  },\r\n  border: {\r\n    border: 'solid',\r\n  },\r\n  fullHeightCard: {\r\n    height: '100%',\r\n  },\r\n  card: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'space-between',\r\n    borderRadius: '15px',\r\n    height: '100%',\r\n    position: 'relative',\r\n  },\r\n  overlay: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    left: '20px',\r\n    color: 'white',\r\n  },\r\n  overlay2: {\r\n    position: 'absolute',\r\n    top: '20px',\r\n    right: '20px',\r\n    color: 'white',\r\n  },\r\n  grid: {\r\n    display: 'flex',\r\n  },\r\n  details: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    margin: '20px',\r\n  },\r\n  title: {\r\n    padding: '0 16px',\r\n  },\r\n  cardActions: {\r\n    padding: '0 16px 8px 16px',\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n  },\r\n});","import React from 'react';\r\nimport useStyles from './styles';\r\nimport { Card, CardActions, CardMedia, Button, Typography, CardContent } from '@material-ui/core';\r\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport moment from 'moment'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deletePost, likePost } from '../../../actions/posts';\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <Card className={classes.card}>\r\n            <CardMedia className={classes.media} image={post.selectedFile} title={post.title} />\r\n            <div className={classes.overlay}>\r\n                <Typography variant=\"h6\">{post.creator}</Typography>\r\n                <Typography variant=\"body2\">{moment(post.createdAt).fromNow()}</Typography>\r\n            </div>\r\n            <div className={classes.overlay2}>\r\n                <Button\r\n                    style={{ color: 'white' }}\r\n                    size=\"small\"\r\n                    onClick={() => setCurrentId(post._id)} >\r\n                    <MoreHorizIcon fontSize=\"default\" />\r\n                </Button>\r\n            </div>\r\n            <div className={classes.details}>\r\n                <Typography variant=\"body2\" color=\"secondary\" >{post.tags.map((tag) => `#${tag} `)}</Typography>\r\n            </div>\r\n            <Typography className={classes.title} variant=\"h5\" gutterBottom >{post.title}</Typography>\r\n            <CardContent>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">{post.message}</Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.cardActions} >\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(likePost(post._id))}>\r\n                    <ThumbUpAltIcon fontSize=\"small\" />\r\n                    &nbsp; Like &nbsp;\r\n                    {post.likeCount}\r\n                </Button>\r\n                <Button size=\"small\" color=\"primary\" onClick={() => dispatch(deletePost(post._id))}>\r\n                    <DeleteIcon fontSize=\"small\" />\r\n                    Delete\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: 'center',\r\n  },\r\n}));","import React from 'react'\r\nimport { Grid, CircularProgress } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Post from './Post/Post';\r\nimport useStyles from './styles';\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n    const posts = useSelector((state) => state.posts);\r\n    const classes = useStyles();\r\n\r\n\r\n    return (\r\n        <>\r\n            {!posts.length ? <CircularProgress /> : (\r\n                <Grid className={classes.container} container alignItems=\"stretch\" spacing={3}>\r\n                    {\r\n                        posts.map((post) => (\r\n                            <Grid key={post._id} item xs={12} sm={6}>\r\n                                <Post post={post} setCurrentId={setCurrentId} />\r\n                            </Grid>\r\n                        ))\r\n                    }\r\n                </Grid>\r\n            )}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Posts\r\n","import React, { useState, useEffect } from 'react'\r\nimport { Container, AppBar, Typography, Grow, Grid } from '@material-ui/core';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport memories from './images/memories.png';\r\nimport useStyles from './styles';\r\nimport { getPosts } from './actions/posts'\r\n\r\n//components\r\n\r\nimport Form from './components/Form/Form'\r\nimport Posts from './components/Posts/Posts'\r\n\r\n\r\nconst App = () => {\r\n    const [currentId, setCurrentId] = useState(0)\r\n    const dispatch = useDispatch();\r\n    const classes = useStyles();\r\n\r\n    useEffect(() => {\r\n        dispatch(getPosts());\r\n    }, [currentId, dispatch])\r\n\r\n    return (\r\n        <Container maxidth='lg'>\r\n            <AppBar className={classes.appBar} position='static' color='inherit' >\r\n                <Typography className={classes.heading} variant='h2' align='center'>Memories</Typography>\r\n                <img className={classes.image} src={memories} alt=\"memories\" height=\"60\" />\r\n            </AppBar>\r\n            <Grow in>\r\n                <Container>\r\n                    <Grid container className={classes.mainContainer}  justify=\"space-between\" alignItems=\"stretch\" spacing={3}>\r\n                        <Grid item xs={12} sm={7}>\r\n                            <Posts setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={4}>\r\n                            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Container>\r\n            </Grow>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default App;\r\n","import { combineReducers } from 'redux';\r\n\r\nimport posts from './posts';\r\n\r\nexport default combineReducers({\r\n    posts\r\n});","import { FETCH_ALL, CREATE, UPDATE, DELETE } from '../constants/actionTypes'\r\n\r\nexport default (posts = [], action) => {\r\n    switch (action.type) {\r\n        case FETCH_ALL:\r\n            return action.payload;\r\n        case CREATE:\r\n            return [...posts, action.payload]\r\n        case UPDATE:\r\n            return posts.map((post) => (post._id === action.payload._id ? action.payload : post))\r\n        case DELETE:\r\n            return posts.filter((post) => post._id !== action.payload)\r\n        default:\r\n            return posts;\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './App';\r\nimport reducers from './reducers'\r\nimport './index.css'\r\n\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n    , document.getElementById('root'))"],"sourceRoot":""}